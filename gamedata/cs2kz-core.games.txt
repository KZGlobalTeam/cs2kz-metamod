"Games"
{
	"csgo"
	{
		"Signatures"
		{
			// Taken from cs2fixes
			"CCSPlayerController_SwitchTeam"
			{
				"library" 	"server"
				"windows" 	"\x40\x56\x57\x48\x81\xEC\x2A\x2A\x2A\x2A\x48\x8B\xF9\x8B\xF2\x8B\xCA"
				"linux" 	"\x55\x48\x89\xE5\x41\x55\x49\x89\xFD\x89\xF7"
			}
			// Taken from cs2fixes
			"CBasePlayerController_SetPawn"
			{
				"library" 	"server"
				"windows" 	"\x44\x88\x4C\x24\x20\x55\x57\x41\x54\x41\x56\x41\x57\x48\x8D\x6C\x24\x2A\x48\x81\xEC\x2A"
				"linux" 	"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x89\xF3\x48\x81\xEC\xC8\x00\x00\x00"
			}
			// CSource2GameClients::StartHLTVServer: game event %s not found.
			// Function right before the first virtual function call
			"GetLegacyGameEventListener"
			{
				"library" 	"server"
				"windows" 	"\x48\x8B\x15\x2A\x2A\x2A\x2A\x48\x85\xD2\x74\x2A\x85\xC9\x74"
				"linux" 	"\x48\x8B\x05\x2A\x2A\x2A\x2A\x48\x85\xC0\x74\x2A\x83\xFF\x3F\x76\x2A\x31\xC0"
			}
			// RecvServerBrowserPacketTask vtable reference
			"RecvServerBrowserPacket"
			{
				"library" 	"steamnetworkingsockets"
				"windows" 	"\x48\x89\x6C\x24\x18\x57\x48\x83\xEC\x20\x48\x8B\xF9\x48\x8B\xEA"
				"linux" 	"\x41\x54\x55\x48\x89\xF5\x53\x48\x89\xFB\x48\x63\x47\x08"
			}
			// Find handler for setang console command
			"SnapViewAngles"
			{
				"library" 	"server"
				"windows" 	"\x48\x89\x5C\x24\x20\x55\x56\x57\x41\x56\x41\x57\x48\x8D\x6C\x24\xC9\x48\x81\xEC\xD0\x00\x00\x00\xBF\xFF\xFF\xFF\xFF"
				"linux" 	"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x89\xF7\x4C"
			}
			"InitPlayerMovementTraceFilter"
			{
				"library" 	"server"
				"windows" 	"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x0F\xB6\x41\x37\x48"
				"linux" 	"\x55\xB8\x2A\x2A\x2A\x2A\x48\x89\xE5\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x83\xEC\x2A\x66\x89\x47\x2A\x48\x8D\x05\x2A\x2A\x2A\x2A\x88\x4F\x2A\x48\x89\x07\x0F\xB7\x47\x2A\x48\x89\x57\x2A\x48\xC7\x47\x2A\x2A\x2A\x2A\x2A\x48\xC7\x47\x2A\x2A\x2A\x2A\x2A\x66\x25\x2A\x2A\x48\xC7\x47\x2A\x2A\x2A\x2A\x2A\x83\xC8\x2A\x48\xC7\x47\x2A\x2A\x2A\x2A\x2A\xC7\x47\x2A\x2A\x2A\x2A\x2A\x66\x89\x47\x2A\x48\x89\xF7\xE8\x2A\x2A\x2A\x2A\x31"
			}
			// search for "CCSBot::BendLineOfSight". should find 1 function, CGameTrace::Init is called in there right after this string is referenced with an 80 byte parameter.
			"InitGameTrace"
			{
				"library" 	"server"
				"windows" 	"\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x20\x48\x8B\xD9\x33\xFF\x48\x8B\x0D\x2A\x2A\x2A\x2A\x48\x85\xC9"
				"linux" 	"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x81\xEC\xA8\x00\x00\x00\x4C\x8B\x25\x2A\x2A\x2A\x2A\x4D\x85\xE4"
			}
			// Function with 5 arguments next to sv_walkable_normal references
			"TracePlayerBBox"
			{
				"library" 	"server"
				"windows" 	"\x4C\x89\x44\x24\x18\x55\x53\x57\x41\x55\x41\x56"
				"linux" 	"\x55\x48\x89\xE5\x41\x57\x49\x89\xFF\x41\x56\x49\x89\xF6\x41\x55\x49\x89\xCD"
			}
			//*(a2 + 200) = sub_7FFE4786BD30(a1->pawn); <- this function
			//   v23 = a1->pawn;
			//   a1->m_bInStuckTest = 0;
			//   v24 = v23->m_pCameraServices;
			//   v25 = sub_7FFE47482320(v23);
			//   v26 = v25;
			//   if ( v25 )
			//   {
			//     EntIndex(v25, &v35);
			//     sub_7FFE4799A200(a1, "following entity %d", v35);
			//   }
			// also contains the string "weapon_shield"
			"GetMaxSpeed"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x18\x57\x48\x83\xEC\x30\x48\x8B\xD9\xE8\x2A\x2A\x2A\x2A\x84\xC0"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x83\xEC\x2A\x4C\x8D\x25\x2A\x2A\x2A\x2A\x49\x8B\x3C\x24\xE8"
			}
			// "pa start %f"
			"ProcessMovement"
			{
				"library"	"server"
				"windows"	"\x40\x56\x57\x48\x81\xEC\x2A\x00\x00\x00\x4C\x8B\x49\x30"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x2A\x48\x8B\x7F\x2A\x8B"
			}
			// called in ProcessMovement in between the strings "pa start %f" and "pa end %f", contains the string "Can't move"
			"PlayerMoveNew"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x30\x48\x8B\xD9\x48\x8B\xFA\x48\x8B\x49\x30"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x48\x8B\x7F\x2A\x48\x8B\x07"
			}
			// Second thing called during PlayerMoveNew
			"CheckParameters"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x10\x48\x89\x70\x18\x55\x57\x41\x54\x41\x56\x41\x57\x48\x8D\x68\xA1\x48\x81\xEC\xD0\x00\x00\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x89\xF3\x48\x83\xEC\x2A\xE8\x2A\x2A\x2A\x2A\x49\x8B"
			}
			// dev_cs_force_disable_move
			"CanMove"
			{
				"library"	"server"
				"windows"	"\x40\x53\x48\x83\xEC\x30\x48\x8B\xD9\xBA\xFF\xFF\xFF\xFF\x48\x8D\x0D\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x48\x85\xC0\x75\x2A\x48\x8B\x05\x2A\x2A\x2A\x2A\x48\x8B\x40\x08\x80\x38\x00\x0F\x85"
				"linux"		"\x55\xBE\xFF\xFF\xFF\xFF\x48\x89\xE5\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x8D\x3D\x2A\x2A\x2A\x2A\x48\x83\xEC\x2A\xE8\x2A\x2A\x2A\x2A\x48\x85\xC0\x0F\x84\xDE"
			}
			// "FullWalkMovePreMove"
			"FullWalkMove"
			{
				"library"	"server"
				"windows"	"\x40\x53\x57\x48\x83\xEC\x68\x48\x8B\xFA\x48\x8B\xD9\x45"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x2A\x84"
			}
			// "[%s] Bogus pmove player movetype in ShouldApplyGravity %i\n" (check xref on linux, inlined on windows)
			"MoveInit"
			{
				"library"	"server"
				"windows"	"\x40\x53\x57\x41\x56\x48\x83\xEC\x50\x48\x8B\xD9"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x48\x89\xF7\x53\x48"
			}
			// somewhere in MoveInit. GLHF!
			"CheckWater"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x08\x48\x89\x78\x10\x55\x48\x8D\xA8\x68\xFF\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x81\xEC\x2A\x2A\x2A\x2A\x48"
			}
			// The second of a triplet of functions followed by "Player.Swim"
			"WaterMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x18\x55\x57\x41\x57\x48\x8D\xA8\xC8\xFE\xFF\xFF"
				"linux"		"\x48\xB8\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x4C\x8D\xAD\x10\xFF\xFF\xFF\x41\x54\x49\x89\xFC\x4C\x89\xEF\x53\x48\x89\xF3\x48\x81\xEC\xD8\x01\x00\x00"
			}
			// "CCSPlayer_MovementServices(%s):  %d/%s Got a NaN velocity on %s\n"
			"CheckVelocity"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x4C\x89\x40\x18\x55\x53\x56\x57\x41\x54"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xFD\x41\x54\x53\x48\x89\xF3\x48\x83\xEC\x2A\x48\x8B\x7F"
			}
			// called after MoveInit in PlayerMoveNew in switch statement with movetype 5
			"Duck"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x20\x55\x56\x57\x41\x56\x41\x57\x48\x8D\xA8\xD8\xFE\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x49\x89\xFE\x41\x55\x45\x31\xED\x41\x54\x49\x89\xF4\x53\x48\x81\xEC\x78\x01\x00\x00"
			}
			// CTraceFilterForPlayerHeadCollision vtable
			"CanUnduck"
			{
				"library"	"server"
				"windows"	"\x40\x55\x41\x54\x41\x56\x48\x8D\xAC\x24\x30\xFF\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x4C\x8D\xAD\x10\xFF\xFF\xFF\x41\x54\x49\x89\xFC\x4C\x89\xEF\x53\x48\x89\xF3\x48\x81\xEC\x58\x01\x00\x00"
			}
			// sv_ladder_dampen
			"LadderMove"
			{
				"library"	"server"
				"windows"	"\x40\x55\x56\x57\x41\x54\x41\x55\x48\x8D\xAC\x24\xE0\xFC\xFF\xFF"
				"linux"		"\x48\xB8\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x4C\x8D\xAD\x90"
			}
			// Look for sv_jump_spam_penalty_time
			"CheckJumpButton"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x18\x56\x48\x83\xEC\x40\x48\x8B\xF2"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x41\x55\x41\x54\x49\x89\xF4\xBE\x2A\x2A\x2A\x2A\x53\x48\x89\xFB\x48\x83\xEC\x2A\xE8"
			}
			// "player_jump"
			"OnJump"
			{
				"library"	"server"
				"windows"	"\x40\x53\x57\x48\x81\xEC\x98\x00\x00\x00\x48\x8B\xD9\x48\x8B\xFA"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x89\xF3\x48\x83\xEC\x2A\x48\x8B\x7F"
			}
			// sv_air_pushaway_dist
			"AirMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x55\x57\x41\x56\x41\x57\x48\x8D\x6C\x24\x88"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\x75\xA0\x41\x55\x4C\x8D\x6D\xAC"
			}
			// Look for sv_air_max_wishspeed
			"AirAccelerate"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x48\x89\x7C\x24\x18\x55\x48\x8D\x6C\x24\xB1"
				"linux"		"\x55\x66\x0F\xEF\xED\x48\x89\xE5\x41\x55"
			}
			// sub_7FFE47869020(a1, a2); <- this function
			// sub_7FFE47863820(a1, a2, "FullWalkMovePreMove"); 
			// sub_7FFE4787B4C0(a1, a2); <- the walkmove function
			"Friction"
			{
				"library"	"server"
				"windows"	"\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x60\x48\x8B\x41\x30"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x89\xF3\x48\x83\xEC\x2A\x48\x8B\x47\x2A\x48\x8B"
			}
			// sub_7FFE47863820(a1, a2, "FullWalkMovePreMove");
			// sub_7FFE4787B4C0(a1, a2); <- this function
			"WalkMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x18\x48\x89\x70\x20\x55\x57\x41\x54\x48\x8D"
				"linux"		"\x48\xB8\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x55\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\xB5\x10\xFF\xFF\xFF\x41\x55\x4C\x8D\xBD\xE8\xFD\xFF\xFF"
			}
			// "CCSPlayer_MovementServices::TryPlayerMove() Trace ended stuck"
			"TryPlayerMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x4C\x89\x48\x20\x4C\x89\x40\x18\x48\x89\x50\x10\x55\x53\x56\x57\x41\x54\x41\x55"
				"linux"		"\x48\xB8\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x55\x66\x0F\xEF\xC0"
			}
			// sub_18061AF90(a1, a2, *(*(a1 + 48) + 864i64) & 1); <- this one
			// sub_18061D5B0(a1, a2, "PlayerMove_PostMove");
			"CategorizePosition"
			{
				"library"	"server"
				"windows"	"\x40\x55\x56\x57\x41\x57\x48\x8D\xAC\x24\x28\xFE\xFF\xFF"
				"linux"		"\x48\xB8\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x55\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\xB5\x50\xFE\xFF\xFF"
			}
			// called before the "player_jump" string in OnJump
			"FinishGravity"
			{
				"library"	"server"
				"windows"	"\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x40\x4C\x8B\x41\x30"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x83\xEC\x2A\x48\x8B\x57"
			}
			// sv_staminalandcost only ref. not inlined in linux, check calling functions.
			"CheckFalling"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x10\x57\x48\x83\xEC\x60\xF3\x0F\x10\x81\x28\x02\x00\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x83\xEC\x2A\x48\x8B\x7F\x2A\xE8"
			}
			"PostPlayerMove"
			{
				"library"	"server"
				"windows"	"\x40\x53\x56\x48\x83\xEC\x58\x48\x8B\x59\x30"
				// Function at the end of the function containing PlayerMove_PostMove string (which is inlined in windows)
				"linux"		"\x55\x48\x89\xE5\x41\x56\x49\x89\xF6\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x83\xEC\x10"
			}
			// "[%.0f %.0f %.0f] relocated from [%.0f %.0f %.0f] in %0.1f sec (v2d = %.0f u/s)\n" "health=%d, armor=%d, helmet=%d"
			"PostThink"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x48\x08\x55\x53\x56\x57\x41\x56\x48\x8D\xA8\xD8\xFE\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x81\xEC\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x48\x89"
			}
			// search for "land_%s", this is called after that string is referenced (the one with 4 parameters).
			// (function that calls it also contains "T_Default.SuitLand").
			"EmitSound"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x48\x89\x7C\x24\x20\x41\x56\x48\x83\xEC\x30\x48\x8B\xF9"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x49\x89\xD6\x41\x55\x41\x89\xF5\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x2A\x48"
			}
			// "sv: Clamped invalid attack history %d index in cmd to -1. Was %d, cmd size %d.\n"
			"ProcessUsercmds"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x44\x88\x48\x20\x44\x89\x40\x18\x48\x89\x50\x10\x57"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x49\x89\xFF\x41\x56\x41\x55\x41\x54\x53\x48\x83\xEC\x2A\x89"
			}
			// Parent function of "SV: %s executing %d commands, backlog is %d commands, processing"
			"PhysicsSimulate"
			{
				"library"	"server"
				"windows"	"\x40\x55\x53\x48\x8D\x6C\x24\xB1\x48\x81\xEC\xD8\x00\x00\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x81\xEC\xB8\x00\x00\x00\xE8\x2A\x2A\x2A\x2A"
			}
		}
		"Offsets"
		{
			"QuietPlayerSlot"
			{
				"windows"		"584"
				"linux"			"584"
			}
			"GameEventManager"
			{
				"windows"		"93"
				"linux"			"93"
			}
			"GameEntitySystem"
			{
				"windows"		"88"
				"linux"			"80"
			}
			// 5 functions after one with "Physics_SimulateEntity" "Server Game"
			"Teleport"
			{
				"windows"		"149"
				"linux"			"148"
			}
			// 5 functions after one with "targethealthfrac"
			"CollisionRulesChanged"
			{
				"windows"		"174"
				"linux"			"175"
			}
			// 9 functions after one with "Physics_SimulateEntity" "Server Game"
			"IsEntityPawn"
			{
				"windows"		"153"
				"linux"			"152"
			}
			// Right after IsEntityPawn
			"IsEntityController"
			{
				"windows"		"154"
				"linux"			"153"
			}
			// String: "%s<%i><%s><%s>" ChangeTeam() CTMDBG..."
			"ControllerChangeTeam"
			{
				"windows"		"93"
				"linux"			"92"
			}
			// Look for the kill command, go through its callback and you should a find call like this, with v9 being a pawn pointer:
			// return (*(*v9 + 2832LL))(v9, v27, 0LL);
			// 2832 (354 * 8) is the offset
			"CommitSuicide"
			{
				"windows"		"360"
				"linux"			"360"
			}
			"ControllerRespawn"
			{
				"windows"		"244"
				"linux"			"246"
			}
			// "Player.Respawn"
			"Respawn"
			{
				"windows"		"328"
				"linux"			"329"
			}
			// Check sv_fullupdate
			"ClientOffset"
			{
				"windows"		"624"
				"linux"			"640"
			}
			// Check "Received acknowledgement tick" string
			"ACKOffset"
			{
				"windows"		"332"
				"linux"			"348"
			}
			// Check ProcessUsercmds
			// Note: the pointer points to an array of 150 usercmds, but I don't know why there are 64 bytes after the usercmd struct itself.
			"UsercmdOffset"
			{
				"windows"		"64"
				"linux"			"56"
			}
			// teleport_trigger_debug cvar
			"StartTouch"
			{
				"windows"		"135"
				"linux"			"134"
			}
			"Touch"
			{
				"windows"		"136"
				"linux"			"135"
			}
			"EndTouch"
			{
				"windows"		"137"
				"linux"			"136"
			}
		}
	}
}
