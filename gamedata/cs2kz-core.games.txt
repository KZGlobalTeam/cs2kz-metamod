"Games"
{
	"csgo"
	{
		"Signatures"
		{
			// Taken from cs2fixes
			"CCSPlayerController_SwitchTeam"
			{
				"library" 	"server"
				"windows"	"\x40\x53\x57\x48\x81\xEC\x2A\x2A\x2A\x2A\x48\x8B\xD9\x8B\xFA"
				"linux"		"\x55\x48\x89\xE5\x41\x54\x49\x89\xFC\x89\xF7"
			}
			// Taken from cs2fixes
			"CBasePlayerController_SetPawn"
			{
				"library" 	"server"
				"windows"	"\x44\x88\x4C\x24\x2A\x53\x57\x41\x54\x41\x56\x41\x57\x48\x83\xEC"
				"linux"		"\x55\x48\x8D\x87\x2A\x2A\x2A\x2A\x48\x89\xE5\x41\x57\x41\x56\x41\x89\xCE\x41\x55\x45\x89\xCD"
			}
			// CSource2GameClients::StartHLTVServer: game event %s not found.
			// Function right before the first virtual function call
			"GetLegacyGameEventListener"
			{
				"library" 	"server"
				"windows" 	"\x48\x8B\x15\x2A\x2A\x2A\x2A\x48\x85\xD2\x74\x2A\x83\xF9\x2A\x77\x2A\x48\x63\xC1\x48\xC1\xE0"
				"linux" 	"\x48\x8B\x05\x2A\x2A\x2A\x2A\x48\x85\xC0\x74\x2A\x83\xFF\x2A\x77\x2A\x48\x63\xFF\x48\xC1\xE7\x2A\x48\x8D\x44\x38"
			}
			// RecvServerBrowserPacketTask vtable reference
			"RecvServerBrowserPacket"
			{
				"library" 	"steamnetworkingsockets"
				"windows" 	"\x48\x89\x6C\x24\x18\x56\x48\x83\xEC\x20\x48\x8B\xF1\x48\x8B\xEA"
				"linux" 	"\x41\x54\x55\x48\x89\xF5\x53\x48\x89\xFB\x48\x63\x47\x08"
			}
			// Find handler for setang console command, it's in the other branch that doesn't use "cpredictionevent_teleport" msg
			"SnapViewAngles"
			{
				"library" 	"server"
				"windows"	"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x48\x89\x7C\x24\x18\x55\x48\x8D\x6C\x24\xA9\x48\x81\xEC\xC0\x00\x00\x00"
				"linux" 	"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x89\xF7\x48\x81\xEC\xA8\x00\x00\x00\xE8\x2A\x2A\x2A\x2A\x48\x8B\x93\xA0\x0F\x00\x00"
			}
			// Function with 5 arguments next to sv_walkable_normal references
			"TracePlayerBBox"
			{
				"library" 	"server"
				"windows" 	"\x4C\x89\x44\x24\x18\x55\x53\x56\x57\x41\x55\x41\x56\x48\x8D\xAC\x24\xF8\xFE\xFF\xFF"
				"linux" 	"\x55\x48\x89\xE5\x41\x57\x41\x56\x49\x89\xD6\x41\x55\x49\x89\xFD\x41\x54\x53\x48\x89\xF3\x48\x81\xEC\xD8\x01\x00\x00"
			}
			// For debugging purposes only (windows)
			// Physics/TraceShape (Server)
			"TraceShape"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x20\x48\x89\x4C\x24\x08\x55\x57"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x49\x89\xCF\x41\x56\x49\x89\xF6\x41\x55\x4D\x89\xC5"
			}
			"CPhysicsGameSystemFrameBoundary"
			{
				"library"	"server"
				"windows"	"\x4C\x8B\xDC\x49\x89\x5B\x08\x49\x89\x6B\x10\x49\x89\x73\x18\x57\x41\x56\x41\x57\x48\x83\xEC\x60"
				"linux"		"\x55\x48\x8d\x05\x2A\x2A\x2A\x2A\x48\x8d\x35\x2A\x2A\x2A\x2A\x48\x89\xE5\x41\x56\x41\x55"
			}
			// sv_show_move_collisions -> 2nd functions with 8 params -> case 4 (mesh)
			"DebugDrawMesh"
			{
				"library"	"server"
				"windows"	"\x48\x89\x4C\x24\x08\x55\x53\x57\x41\x54\x41\x55\x48\x8D\xAC\x24\x40\xFF\xFF\xFF"
				"linux"		"\x55\x48\x89\xF0\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x81\xEC\x48\x01\x00\x00"
			}
			// dev_create_move_report
			"SetupMove"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x10\x48\x89\x6C\x24\x18\x48\x89\x74\x24\x20\x57\x41\x56\x41\x57\x48\x83\xEC\x30\x49\x8B\xF0"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xD4\x53\x48\x89\xFB\x48\x83\xEC\x38"
			}
			// "pa start %f"
			"ProcessMovement"
			{
				"library"	"server"
				"windows"	"\x40\x57\x41\x57\x48\x81\xEC\xB8\x00\x00\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x83\xEC\x38\x48\x8B\x7F\x30"
			}
			// called in ProcessMovement in between the strings "pa start %f" and "pa end %f", contains the string "Can't move"
			"PlayerMove"
			{
				"library"	"server"
				"windows"	"\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x50\x48\x83\x79\x30\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x8B\x7F\x2A\x48\x85\xFF\x0F\x84\x2A\x2A\x2A\x2A\x48\x8B\x07\xFF\x90"
			}
			// Second thing called during PlayerMove
			"CheckParameters"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x20\x55\x56\x57\x41\x56\x41\x57\x48\x8D\x68\xA1\x48\x81\xEC\xC0\x00\x00\x00\x0F\xB6\x79\x50"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x89\xF3\x48\x81\xEC\x88\x01\x00\x00\xE8"
			}
			// dev_cs_force_disable_move
			"CanMove"
			{
				"library"	"server"
				"windows"	"\x40\x57\x48\x83\xEC\x30\x48\x8B\xF9\xBA\xFF\xFF\xFF\xFF"
				"linux"		"\x55\xBE\xFF\xFF\xFF\xFF\x48\x89\xE5\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x8D\x3D\x2A\x2A\x2A\x2A\x48\x83\xEC\x08\xE8\x2A\x2A\x2A\x2A\x48\x85\xC0\x0F\x84"
			}
			// Function containing "FullWalkMovePreMove"
			"FullWalkMove"
			{
				"library"	"server"
				"windows"	"\x40\x56\x57\x48\x83\xEC\x58\x48\x8B\xF2"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x83\xEC\x58\x84\xD2"
			}
			// sv_optimizedmovement ref
			"MoveInit"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x18\x56\x48\x83\xEC\x30\x48\x8B\xF2"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x89\xF7\x48\x83\xEC\x58"
			}
			// somewhere in MoveInit. GLHF!
			// In the function containing FullTossMovePreGravity, it's the second function called
			"CheckWater"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x08\x48\x89\x70\x10\x48\x89\x78\x18\x55\x48\x8D\xA8\x58\xFF\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x49\x89\xF5\x41\x54\x53\x48\x89\xFB\x48\x81\xEC\x68\x01\x00\x00"
			}
			// The third of a chain of 4 functions followed by "Water.PlayerEnter" eventually
			"WaterMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x08\x48\x89\x70\x10\x48\x89\x78\x18\x4C\x89\x70\x20\x55\x48\x8D\xA8\xD8\xFE\xFF\xFF\x48\x81\xEC\x20\x02\x00\x00\x0F\x29\x70\xE8\x45\x33\xF6"
				"linux"		"\x55\x66\x0F\xEF\xC0\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\xB5\x10\xFF\xFF\xFF\x41\x55\x41\x54\x49\x89\xFC"
			}
			// "CCSPlayer_MovementServices(%s):  %d/%s Got a NaN velocity on %s\n"
			"CheckVelocity"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x4C\x89\x40\x18\x55\x53\x56\x57\x41\x54\x41\x55\x41\x56\x41\x57\x48\x8D\x68\xA1"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x49\x89\xF7\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x68\x48\x8B\x7F\x30"
			}
			// called after MoveInit in PlayerMove in switch statement with movetype 5
			// bot_crouch cvar
			// CCSTraceFilterSimple vtable ref
			"Duck"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x55\x53\x56\x57\x41\x56\x41\x57\x48\x8D\xA8\xA8\xFE\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x81\xEC\x88\x01\x00\x00\x48\x89\xB5"
			}
			// CTraceFilterForPlayerHeadCollision vtable
			"CanUnduck"
			{
				"library"	"server"
				"windows"	"\x40\x55\x56\x41\x54\x48\x8D\xAC\x24\xE0\xFE\xFF\xFF"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x53\x48\x89\xFB\x48\x81\xEC\x78\x01\x00\x00\x48\x8B\x7F\x30"
			}
			// sv_ladder_dampen
			"LadderMove"
			{
				"library"	"server"
				"windows"	"\x40\x55\x53\x56\x57\x41\x57\x48\x8D\xAC\x24\x10\xFD\xFF\xFF"
				"linux"		"\x55\x66\x0F\xEF\xC0\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x4C\x8D\xAD\x2A\x2A\x2A\x2A\x41\x54\x49\x89\xF4\x53\x48\x89\xFB"
			}
			// Look for sv_jump_spam_penalty_time
			"CheckJumpButton"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x18\x55\x48\x83\xEC\x40\x48\x8B\xEA"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x41\x54\x49\x89\xF4\xBE\x02\x00\x00\x00\x53\x48\x89\xFB\x48\x83\xEC\x68"
			}
			// "player_jump"
			"OnJump"
			{
				"library"	"server"
				"windows"	"\x40\x56\x57\x48\x81\xEC\xE8\x00\x00\x00\x48\x83\x79\x30\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x53\x48\x81\xEC\xA8\x00\x00\x00\x48\x8B\x7F\x30"
			}
			// "StartGravity", sv_air_max_wishspeed
			"AirMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x58\x18\x48\x89\x70\x20\x55\x57\x41\x56\x48\x8D\x68\xA1\x48\x81\xEC\xD0\x00\x00\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\x75\x2A\x41\x55\x4C\x8D\x6D\x2A\x41\x54\x48\x8D\x4D"
			}
			// sub_7FFE47869020(a1, a2); <- this function
			// sub_7FFE47863820(a1, a2, "FullWalkMovePreMove"); 
			// sub_7FFE4787B4C0(a1, a2); <- the walkmove function
			"Friction"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x70\x48\x83\x79\x30\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x89\xF3\x48\x83\xEC\x38\x48\x8B\x7F\x30"
			}
			// sub_7FFE47863820(a1, a2, "FullWalkMovePreMove");
			// sub_7FFE4787B4C0(a1, a2); <- this function
			"WalkMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x48\x89\x70\x10\x48\x89\x78\x18\x55\x41\x56\x41\x57\x48\x8D\xA8\x08\xFE\xFF\xFF"
				"linux"		"\x55\x66\x0F\xEF\xC0\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\xB5\x10\xFF\xFF\xFF\x41\x55\x4C\x8D\xBD\xD8\xFD\xFF\xFF"
			}
			// sv_jump_precision_enable
			"TryPlayerMove"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x4C\x89\x48\x20\x4C\x89\x40\x18\x48\x89\x50\x10\x48\x89\x48\x08\x55\x53\x56\x57\x41\x54\x41\x55\x41\x56\x41\x57\x48\x8D\xA8\xC8\xFD\xFF\xFF"
				"linux"		"\x55\x66\x0F\xEF\xC0\x48\x89\xE5\x41\x57\x49\x89\xF7\x41\x56\x41\x55\x4D\x89\xC5"
			}
			// sub_18061AF90(a1, a2, *(*(a1 + 48) + 864i64) & 1); <- this one
			// sub_18061D5B0(a1, a2, "PlayerMove_PostMove");
			"CategorizePosition"
			{
				"library"	"server"
				"windows"	"\x40\x55\x56\x57\x41\x55\x48\x8D\xAC\x24\x18\xFE\xFF\xFF"
				"linux"		"\x55\x66\x0F\xEF\xC0\x48\x89\xE5\x41\x57\x41\x56\x48\x8D\x85\x2A\x2A\x2A\x2A\x41\x55"
			}
			// sv_staminalandcost only ref. not inlined in linux, check calling functions.
			"CheckFalling"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x10\x57\x48\x81\xEC\x80\x00\x00\x00\x48\x8B\xD9"
				"linux"		"\x55\x48\x89\xE5\x41\x55\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x83\xEC\x68\x48\x8B\x7F"
			}
			"PostPlayerMove"
			{
				"library"	"server"
				"windows"	"\x40\x53\x56\x41\x56\x48\x83\xEC\x60\x48\x83\x79\x30\x00"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x50\x48\x8B\x5F"
			}
			// "exit_bombzone"
			"PostThink"
			{
				"library"	"server"
				"windows"	"\x48\x2A\x2A\x55\x53\x56\x57\x41\x2A\x48\x2A\x2A\x2A\x48\x2A\x2A\x2A\x2A\x2A\x2A\x4C\x89\x68"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x83\xEC\x40\xE8\x2A\x2A\x2A\x2A\xF3\x0F\x10\x83\xC4\x11\x00\x00"
			}
			// search for "CT_Water.StepLeft", this is called after that string is referenced (the one with 4 parameters).
			"EmitSound"
			{
				"library"	"server"
				"windows"	"\x4C\x8B\xDC\x49\x89\x5B\x08\x49\x89\x6B\x10\x49\x89\x73\x18\x49\x89\x7B\x20\x41\x56\x48\x83\xEC\x70\x49\xC7\x43\xC0\x83\x01\x00\x00"
				"linux"		"\x55\x48\x8D\x05\x2A\x2A\x2A\x2A\x48\x89\xE5\x41\x57\x49\x89\xCF\x41\x56\x41\x89\xD6"
			}
			// "%sRecv usercmd %d.  Margin:%5.1fms net +%2d queue =%5.1f"
			"ProcessUsercmds"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x44\x88\x48\x20\x44\x89\x40\x18\x48\x89\x50\x10\x53"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x83\xEC\x48\x89\x4D"
			}
			// "'%s' took %.1fms to execute %d commands, backlog is %d commands\n"
			// This is actually CBasePlayerController::OnSimulateUserCommands
			"PhysicsSimulate"
			{
				"library"	"server"
				"windows"	"\x40\x55\x53\x56\x48\x8D\x6C\x24\xA0"
				"linux"		"\x55\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x53\x48\x89\xFB\x48\x8D\x3D\x2A\x2A\x2A\x2A\x48\x81\xEC\x2A\x00\x00\x00"
			}
			// Check function associated with net_reloadgameevents
			"GameEventManager"
			{
				"library"	"server"
				"windows"	"\x48\x8D\x0D\x2A\x2A\x2A\x2A\x49\x8B\x04\x38"
				"linux"		"\x4C\x8D\x25\x2A\x2A\x2A\x2A\x31\xDB\x48\x83\xEC\x08"
			}
			// All functions below are taken from cs2fixes
			"CreateEntityByName"
			{
				"library"		"server"
				"windows"		"\x48\x83\xEC\x48\xC6\x44\x24\x30\x00"
				"linux"			"\x48\x8D\x05\x2A\x2A\x2A\x2A\x55\x48\x89\xFA"
			}
			"DispatchSpawn"
			{
				"library"		"server"
				"windows"		"\x48\x89\x5C\x24\x10\x57\x48\x83\xEC\x30\x48\x8B\xDA\x48\x8B\xF9\x48\x85\xC9"
				"linux"			"\x48\x85\xFF\x74\x2A\x55\x48\x89\xE5\x41\x55\x49\x89\xFD"
			}
			"RemoveEntity"
			{
				"library"		"server"
				"windows"		"\x48\x85\xC9\x74\x2A\x48\x8B\xD1\x48\x8B\x0D\x2A\x2A\x2A\x2A"
				"linux"			"\x48\x89\xFE\x48\x85\xFF\x74\x2A\x48\x8D\x05\x2A\x2A\x2A\x2A\x48"
			}
		}
		"Offsets"
		{
			"QuietPlayerSlot"
			{
				"windows"		"576"
				"linux"			"576"
			}
			"GameEntitySystem"
			{
				"windows"		"88"
				"linux"			"80"
			}
			"Teleport"
			{
				"windows"		"165"
				"linux"			"164"
			}
			// 2 functions after one with "targethealthfrac"
			"CollisionRulesChanged"
			{
				"windows"		"189"
				"linux"			"188"
			}
			// 11 functions after one with "CBasePlayerPawn::PhysicsSimulate"
			"IsEntityPawn"
			{
				"windows"		"172"
				"linux"			"171"
			}
			// Right after IsEntityPawn
			"IsEntityController"
			{
				"windows"		"173"
				"linux"			"172"
			}
			// String: "%s<%i><%s><%s>" ChangeTeam() CTMDBG..."
			"ControllerChangeTeam"
			{
				"windows"		"106"
				"linux"			"105"
			}
			// Look for the kill command, go through its callback and you should a find call like this, with v9 being a pawn pointer:
			// return (*(*v9 + 2832LL))(v9, v27, 0LL);
			// 2832 (354 * 8) is the offset
			"CommitSuicide"
			{
				"windows"		"408"
				"linux"			"408"
			}
			"ControllerRespawn"
			{
				"windows"		"275"
				"linux"			"277"
			}
			// "Player.Respawn"
			"Respawn"
			{
				"windows"		"370"
				"linux"			"371"
			}
			// Check sv_fullupdate
			"ClientOffset"
			{
				"windows"		"624"
				"linux"			"640"
			}
			// teleport_trigger_debug cvar
			"StartTouch"
			{
				"windows"		"150"
				"linux"			"149"
			}
			"Touch"
			{
				"windows"		"151"
				"linux"			"150"
			}
			"EndTouch"
			{
				"windows"		"152"
				"linux"			"151"
			}
			"PassesTriggerFilters"
			{
				"windows"		"269"
				"linux"			"270"
			}
			// In DebugDrawMesh, offset used when solid=true
			"DebugTriangle"
			{
				"windows"		"54"
				"linux"			"55"
			}
			// CDebugOverlayGameSystem second vtable, offset 1 (windows):
			//   result = debugoverlay;
			//   qword_1815F1700 = debugoverlay;
			//   qword_1815F1708 = debugoverlay;
			//   v6 = *(a1 + 80);
			//   qword_1815F16E8 = debugoverlay;
			// xref to the other read, that's where the function is
			
			// Alternatively, find function with "sv_shutdown;\n", its the function after nullsub
			"GetDebugOverlay"
			{
				"windows"		"73"
				"linux"			"73"
			}
			"ClearOverlays"
			{
				"windows"		"2"
				"linux"			"3"
			}
		}
	}
}
